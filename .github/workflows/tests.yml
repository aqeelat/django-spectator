
name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: "Python ${{ matrix.python-version }}, Django ${{ matrix.django-version}}"
    runs-on: ubuntu-latest
    # env:
    #   USING_COVERAGE: '3.8'

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        django-version: ["2.2", "3.0", "3.1"]
        # If we wanted to exclude combinations, we could add them here:
        # exclude:
          # - python-version: "3.5"
          #   django-version: "3.0"

    steps:
      - name: Git clone
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ matrix.python-version }}-v1-${{ hashFiles('tox.ini', 'setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-v1-

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox tox-gh-actions

      - name: Test with Tox
        run: tox -v
        env:
          DJANGO: ${{ matrix.django-version }}

  # The flake8 and coverage tests in tox.ini won't run with the test job,
  # so we need to add them here.
  lint:
    name: ${{ matrix.toxenv }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toxenv:
          - flake8

    steps:
      - name: Git clone
        uses: actions/checkout@v2

      - name: Set up Python ${{ env.default_python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.default_python }}

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ matrix.toxenv }}-v1-${{ hashFiles('tox.ini', 'setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.toxenv }}-v1-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox tox-gh-actions

      - name: Run ${{ matrix.toxenv }}
        run: python -m tox -v -e ${{ matrix.toxenv }}